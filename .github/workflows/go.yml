# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    # - name: Cache
    #   uses: actions/cache@v4.0.0
    #   with:
    #     # A list of files, directories, and wildcard patterns to cache and restore
    #     path: 
    #     # An explicit key for restoring and saving the cache
    #     key: 
    #     # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    #     restore-keys: # optional
    #     # The chunk size used to split up large files during upload, in bytes
    #     upload-chunk-size: # optional
    #     # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    #     enableCrossOsArchive: # optional, default is false
    #     # Fail the workflow if cache entry is not found
    #     fail-on-cache-miss: # optional, default is false
    #     # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    #     lookup-only: # optional, default is false
    #     # Run the post step to save the cache even if another step before fails
    #     save-always: # optional, default is false
          
    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
